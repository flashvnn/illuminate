<?php
/**
 * @file
 * Laravel Example.
 */

/**
 * Implements hook_init().
 */
function illuminate_example_init() {
  illuminate_addPSR0("Drupal\\illuminate_example\\Example", drupal_get_path("module", "illuminate_example") . "/lib");
}

/**
 * Implements hook_menu().
 */
function illuminate_example_menu() {

  $items['illuminate-example'] = array(
    'title'            => 'Laravel Example',
    'page callback'    => 'illuminate_example_page',
    'page arguments'   => array() ,
    'access arguments' => array('access content'),
  );

  $items['illuminate-example/%'] = array(
    'title'            => 'Laravel Example',
    'page callback'    => 'illuminate_example_detail_page',
    'page arguments'   => array(1) ,
    'access arguments' => array('access content') ,
  );

  $items['illuminate-controller'] = array(
    'title'            => 'Laravel Controller',
    'page callback'    => 'illuminate_controller',
    'page arguments'   => array("\\Drupal\\illuminate_example\\Example\\DemoController", "showProfile") ,
    'access arguments' => array('access content'),
  );

  return $items;
}

function illuminate_example_items() {
  return array(
    'cache'        => "Cache Example",
    'yamlconfig'   => "YAML Config Example",
    'drupalassets' => "Drupal Assets Example",
    'drupalconfig' => "Drupal Config Example",
    'sendemail'    => "Send Email example",
    'response'     => "Response example",
    'log'          => "Log example",
    'viewrender'   => "Laravel View Render Example",
  );
}

function illuminate_example_page(){
  $examples = illuminate_example_items();
  $items = array();
  foreach ($examples as $key => $value) {
    $items[] = l($value, "illuminate-example/" . $key);
  }
  $output = theme("item_list", array("items" => $items));

  return $output;
}

function illuminate_example_detail_page($key) {
  $fn = 'illuminate_example_'.$key;
  if (function_exists($fn)){
    $examples = illuminate_example_items();
    drupal_set_title($examples[$key]);

    return $fn();
  }

  return $fn . ":: Not found.";
}

function illuminate_example_cache(){
  $cachedata = Cache::remember('illuminate_example_cache', 1/6, function(){
      return "Now is:" . date("Y-m-d h:i:s");
  });

  return "Cache data in 10 seconds::" . $cachedata;
}

function illuminate_example_yamlconfig(){
  $config = YAML::load('illuminate_example');
  // Get all config variables.
  dpm($config->obtain(), "All variables: YAML::load('illuminate_example')->obtain():");
  // Get config with a key.
  if($con_vars = $config->get('name')){
    dpm($con_vars, "Get name var YAML::load('illuminate_example')->get('name'):");
  }

  return "Loaded yaml config:" . illuminate_realpath('{module-illuminate_example}/config/config.yml');
}

function illuminate_example_drupalassets(){
  //DrupalAssets::css("{module-illuminate_example}/theme/mytheme.css");
  return "DrupalAssets test, load css change style of " . check_plain('<h1>');
}

function illuminate_example_drupalconfig(){
  $illuminate_example = Drupal::keyValue("illuminate_example");

  $illuminate_example->set("demo", "demo-value");
  dpm($illuminate_example->get("demo"));

  return "Drupal config";
}

/**
 * Example view render.
 *
 * @return string
 */
function illuminate_example_viewrender() {
  //$template = illuminate_realpath('{module-illuminate_example}/theme/mytheme.tpl.php');
  $template = "demo";

  return ViewRender::make($template, array("name" => "HKT"));
}


function illuminate_example_sendemail() {
  $data = array('firstname' => 'HKT');
  $template = illuminate_realpath('{module-illuminate_example}/theme/welcome.tpl.php');

  Mail::send($template, $data, function($message) {
      $message->to('flashvnn@gmail.com', 'Flash Vnn')->subject('Welcome Laravel!');
  });

  return "Send mail complete";
}


function illuminate_example_response() {
  return Response::json(user_load(1));
}

function illuminate_example_log() {
  $logfile = "public://laravel.log";

  Log::useFiles($logfile);
  Log::info('This is some useful information.', array("name" => "HKT"));
  Log::error('This is some error information.', array("name" => "HKT"));

  return nl2br(File::get($logfile));
}
